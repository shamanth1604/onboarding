# This policy is designed to manage access to secrets related to AWS EC2 and RDS instances within Conjur, a security service that manages secrets and other sensitive data. 
# The policy is structured to define roles, permissions, and secrets for EC2 and RDS resources.

- !policy
  id: shupendr_ec2-rds
  body:
    # Layer for grouping EC2 instance hosts
    - !layer ec2-instances

    # Layer for grouping RDS instance hosts
    - !layer rds-instances

    # Host representing an EC2 instance
    - !host ec2-instance-01

    # Host representing an RDS instance
    - !host rds-instance-01

    # User with permissions to manage EC2 and RDS secrets
    - !user shupendr

    # Grant 'ec2-instances' layer access to 'ec2-instance-01' host
    - !grant
      role: !layer ec2-instances
      members:
        - !host ec2-instance-01

    # Grant 'rds-instances' layer access to 'rds-instance-01' host
    - !grant
      role: !layer rds-instances
      members:
        - !host rds-instance-01

    # Nested policy for EC2 secrets
    - !policy
      id: ec2
      body:
        # Variable for storing EC2 access key ID
        - !variable access_key_id

        # Variable for storing EC2 secret access key
        - !variable secret_access_key

    # Nested policy for RDS secrets
    - !policy
      id: rds
      body:
        # Variable for storing RDS database username
        - !variable db_username

        # Variable for storing RDS database password
        - !variable db_password

    # Permissions for 'ec2-instances' layer to fetch (read) the EC2 secret_access_key
    - !permit
      role: !layer ec2-instances
      privilege: [read, execute]
      resource: !variable ec2/secret_access_key

    # Permissions for 'rds-instances' layer to fetch (read) the RDS db_password
    - !permit
      role: !layer rds-instances
      privilege: [read, execute]
      resource: !variable rds/db_password

    # Permissions for 'shupendr' user to read, update, and execute on EC2 and RDS secrets
    - !permit
      role: !user shupendr
      privilege: [read, update, execute]
      resources:
        - !variable ec2/access_key_id
        - !variable ec2/secret_access_key
        - !variable rds/db_username
        - !variable rds/db_password